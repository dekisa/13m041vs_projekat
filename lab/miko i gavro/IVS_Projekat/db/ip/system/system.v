// system.v

// Generated using ACDS version 17.1 590

`timescale 1 ps / 1 ps
module system (
		input  wire        clk_clk,       //       clk.clk
		input  wire        reset_reset_n, //     reset.reset_n
		output wire        sdram_clk_clk, // sdram_clk.clk
		output wire [12:0] wire_addr,     //      wire.addr
		output wire [1:0]  wire_ba,       //          .ba
		output wire        wire_cas_n,    //          .cas_n
		output wire        wire_cke,      //          .cke
		output wire        wire_cs_n,     //          .cs_n
		inout  wire [15:0] wire_dq,       //          .dq
		output wire [1:0]  wire_dqm,      //          .dqm
		output wire        wire_ras_n,    //          .ras_n
		output wire        wire_we_n      //          .we_n
	);

	wire         altpll_0_c0_clk;                                                     // altpll_0:c0 -> [irq_mapper:clk, jtag_uart_0:clk, manager:clk, mbox_m_w0:clk, mbox_m_w1:clk, mbox_m_w2:clk, mbox_m_w3:clk, mm_interconnect_0:altpll_0_c0_clk, performance_counter_0:clk, req_fifo:rdclock, req_fifo:wrclock, rst_controller_001:clk, rst_controller_002:clk, sdram_0:clk_clk, shared_ocm:clk, worker0:clk_clk, worker1:clk_clk, worker2:clk_clk, worker3:clk_clk]
	wire  [31:0] manager_data_master_readdata;                                        // mm_interconnect_0:manager_data_master_readdata -> manager:d_readdata
	wire         manager_data_master_waitrequest;                                     // mm_interconnect_0:manager_data_master_waitrequest -> manager:d_waitrequest
	wire         manager_data_master_debugaccess;                                     // manager:debug_mem_slave_debugaccess_to_roms -> mm_interconnect_0:manager_data_master_debugaccess
	wire  [26:0] manager_data_master_address;                                         // manager:d_address -> mm_interconnect_0:manager_data_master_address
	wire   [3:0] manager_data_master_byteenable;                                      // manager:d_byteenable -> mm_interconnect_0:manager_data_master_byteenable
	wire         manager_data_master_read;                                            // manager:d_read -> mm_interconnect_0:manager_data_master_read
	wire         manager_data_master_readdatavalid;                                   // mm_interconnect_0:manager_data_master_readdatavalid -> manager:d_readdatavalid
	wire         manager_data_master_write;                                           // manager:d_write -> mm_interconnect_0:manager_data_master_write
	wire  [31:0] manager_data_master_writedata;                                       // manager:d_writedata -> mm_interconnect_0:manager_data_master_writedata
	wire  [31:0] manager_instruction_master_readdata;                                 // mm_interconnect_0:manager_instruction_master_readdata -> manager:i_readdata
	wire         manager_instruction_master_waitrequest;                              // mm_interconnect_0:manager_instruction_master_waitrequest -> manager:i_waitrequest
	wire  [26:0] manager_instruction_master_address;                                  // manager:i_address -> mm_interconnect_0:manager_instruction_master_address
	wire         manager_instruction_master_read;                                     // manager:i_read -> mm_interconnect_0:manager_instruction_master_read
	wire         manager_instruction_master_readdatavalid;                            // mm_interconnect_0:manager_instruction_master_readdatavalid -> manager:i_readdatavalid
	wire         worker0_wout_waitrequest;                                            // mm_interconnect_0:worker0_wout_waitrequest -> worker0:wout_waitrequest
	wire  [31:0] worker0_wout_readdata;                                               // mm_interconnect_0:worker0_wout_readdata -> worker0:wout_readdata
	wire         worker0_wout_debugaccess;                                            // worker0:wout_debugaccess -> mm_interconnect_0:worker0_wout_debugaccess
	wire  [27:0] worker0_wout_address;                                                // worker0:wout_address -> mm_interconnect_0:worker0_wout_address
	wire         worker0_wout_read;                                                   // worker0:wout_read -> mm_interconnect_0:worker0_wout_read
	wire   [3:0] worker0_wout_byteenable;                                             // worker0:wout_byteenable -> mm_interconnect_0:worker0_wout_byteenable
	wire         worker0_wout_readdatavalid;                                          // mm_interconnect_0:worker0_wout_readdatavalid -> worker0:wout_readdatavalid
	wire  [31:0] worker0_wout_writedata;                                              // worker0:wout_writedata -> mm_interconnect_0:worker0_wout_writedata
	wire         worker0_wout_write;                                                  // worker0:wout_write -> mm_interconnect_0:worker0_wout_write
	wire   [0:0] worker0_wout_burstcount;                                             // worker0:wout_burstcount -> mm_interconnect_0:worker0_wout_burstcount
	wire         worker1_wout_waitrequest;                                            // mm_interconnect_0:worker1_wout_waitrequest -> worker1:wout_waitrequest
	wire  [31:0] worker1_wout_readdata;                                               // mm_interconnect_0:worker1_wout_readdata -> worker1:wout_readdata
	wire         worker1_wout_debugaccess;                                            // worker1:wout_debugaccess -> mm_interconnect_0:worker1_wout_debugaccess
	wire  [27:0] worker1_wout_address;                                                // worker1:wout_address -> mm_interconnect_0:worker1_wout_address
	wire         worker1_wout_read;                                                   // worker1:wout_read -> mm_interconnect_0:worker1_wout_read
	wire   [3:0] worker1_wout_byteenable;                                             // worker1:wout_byteenable -> mm_interconnect_0:worker1_wout_byteenable
	wire         worker1_wout_readdatavalid;                                          // mm_interconnect_0:worker1_wout_readdatavalid -> worker1:wout_readdatavalid
	wire  [31:0] worker1_wout_writedata;                                              // worker1:wout_writedata -> mm_interconnect_0:worker1_wout_writedata
	wire         worker1_wout_write;                                                  // worker1:wout_write -> mm_interconnect_0:worker1_wout_write
	wire   [0:0] worker1_wout_burstcount;                                             // worker1:wout_burstcount -> mm_interconnect_0:worker1_wout_burstcount
	wire         worker2_wout_waitrequest;                                            // mm_interconnect_0:worker2_wout_waitrequest -> worker2:wout_waitrequest
	wire  [31:0] worker2_wout_readdata;                                               // mm_interconnect_0:worker2_wout_readdata -> worker2:wout_readdata
	wire         worker2_wout_debugaccess;                                            // worker2:wout_debugaccess -> mm_interconnect_0:worker2_wout_debugaccess
	wire  [27:0] worker2_wout_address;                                                // worker2:wout_address -> mm_interconnect_0:worker2_wout_address
	wire         worker2_wout_read;                                                   // worker2:wout_read -> mm_interconnect_0:worker2_wout_read
	wire   [3:0] worker2_wout_byteenable;                                             // worker2:wout_byteenable -> mm_interconnect_0:worker2_wout_byteenable
	wire         worker2_wout_readdatavalid;                                          // mm_interconnect_0:worker2_wout_readdatavalid -> worker2:wout_readdatavalid
	wire  [31:0] worker2_wout_writedata;                                              // worker2:wout_writedata -> mm_interconnect_0:worker2_wout_writedata
	wire         worker2_wout_write;                                                  // worker2:wout_write -> mm_interconnect_0:worker2_wout_write
	wire   [0:0] worker2_wout_burstcount;                                             // worker2:wout_burstcount -> mm_interconnect_0:worker2_wout_burstcount
	wire         worker3_wout_waitrequest;                                            // mm_interconnect_0:worker3_wout_waitrequest -> worker3:wout_waitrequest
	wire  [31:0] worker3_wout_readdata;                                               // mm_interconnect_0:worker3_wout_readdata -> worker3:wout_readdata
	wire         worker3_wout_debugaccess;                                            // worker3:wout_debugaccess -> mm_interconnect_0:worker3_wout_debugaccess
	wire  [27:0] worker3_wout_address;                                                // worker3:wout_address -> mm_interconnect_0:worker3_wout_address
	wire         worker3_wout_read;                                                   // worker3:wout_read -> mm_interconnect_0:worker3_wout_read
	wire   [3:0] worker3_wout_byteenable;                                             // worker3:wout_byteenable -> mm_interconnect_0:worker3_wout_byteenable
	wire         worker3_wout_readdatavalid;                                          // mm_interconnect_0:worker3_wout_readdatavalid -> worker3:wout_readdatavalid
	wire  [31:0] worker3_wout_writedata;                                              // worker3:wout_writedata -> mm_interconnect_0:worker3_wout_writedata
	wire         worker3_wout_write;                                                  // worker3:wout_write -> mm_interconnect_0:worker3_wout_write
	wire   [0:0] worker3_wout_burstcount;                                             // worker3:wout_burstcount -> mm_interconnect_0:worker3_wout_burstcount
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect;          // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_chipselect -> jtag_uart_0:av_chipselect
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata;            // jtag_uart_0:av_readdata -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_readdata
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest;         // jtag_uart_0:av_waitrequest -> mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_waitrequest
	wire   [0:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address;             // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_address -> jtag_uart_0:av_address
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read;                // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_read -> jtag_uart_0:av_read_n
	wire         mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write;               // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_write -> jtag_uart_0:av_write_n
	wire  [31:0] mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata;           // mm_interconnect_0:jtag_uart_0_avalon_jtag_slave_writedata -> jtag_uart_0:av_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w0_avmm_msg_sender_readdata;                // mbox_m_w0:avmm_snd_readdata -> mm_interconnect_0:mbox_m_w0_avmm_msg_sender_readdata
	wire         mm_interconnect_0_mbox_m_w0_avmm_msg_sender_waitrequest;             // mbox_m_w0:avmm_snd_waitrequest -> mm_interconnect_0:mbox_m_w0_avmm_msg_sender_waitrequest
	wire   [1:0] mm_interconnect_0_mbox_m_w0_avmm_msg_sender_address;                 // mm_interconnect_0:mbox_m_w0_avmm_msg_sender_address -> mbox_m_w0:avmm_snd_address
	wire         mm_interconnect_0_mbox_m_w0_avmm_msg_sender_read;                    // mm_interconnect_0:mbox_m_w0_avmm_msg_sender_read -> mbox_m_w0:avmm_snd_read
	wire         mm_interconnect_0_mbox_m_w0_avmm_msg_sender_write;                   // mm_interconnect_0:mbox_m_w0_avmm_msg_sender_write -> mbox_m_w0:avmm_snd_write
	wire  [31:0] mm_interconnect_0_mbox_m_w0_avmm_msg_sender_writedata;               // mm_interconnect_0:mbox_m_w0_avmm_msg_sender_writedata -> mbox_m_w0:avmm_snd_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w1_avmm_msg_sender_readdata;                // mbox_m_w1:avmm_snd_readdata -> mm_interconnect_0:mbox_m_w1_avmm_msg_sender_readdata
	wire         mm_interconnect_0_mbox_m_w1_avmm_msg_sender_waitrequest;             // mbox_m_w1:avmm_snd_waitrequest -> mm_interconnect_0:mbox_m_w1_avmm_msg_sender_waitrequest
	wire   [1:0] mm_interconnect_0_mbox_m_w1_avmm_msg_sender_address;                 // mm_interconnect_0:mbox_m_w1_avmm_msg_sender_address -> mbox_m_w1:avmm_snd_address
	wire         mm_interconnect_0_mbox_m_w1_avmm_msg_sender_read;                    // mm_interconnect_0:mbox_m_w1_avmm_msg_sender_read -> mbox_m_w1:avmm_snd_read
	wire         mm_interconnect_0_mbox_m_w1_avmm_msg_sender_write;                   // mm_interconnect_0:mbox_m_w1_avmm_msg_sender_write -> mbox_m_w1:avmm_snd_write
	wire  [31:0] mm_interconnect_0_mbox_m_w1_avmm_msg_sender_writedata;               // mm_interconnect_0:mbox_m_w1_avmm_msg_sender_writedata -> mbox_m_w1:avmm_snd_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w2_avmm_msg_sender_readdata;                // mbox_m_w2:avmm_snd_readdata -> mm_interconnect_0:mbox_m_w2_avmm_msg_sender_readdata
	wire         mm_interconnect_0_mbox_m_w2_avmm_msg_sender_waitrequest;             // mbox_m_w2:avmm_snd_waitrequest -> mm_interconnect_0:mbox_m_w2_avmm_msg_sender_waitrequest
	wire   [1:0] mm_interconnect_0_mbox_m_w2_avmm_msg_sender_address;                 // mm_interconnect_0:mbox_m_w2_avmm_msg_sender_address -> mbox_m_w2:avmm_snd_address
	wire         mm_interconnect_0_mbox_m_w2_avmm_msg_sender_read;                    // mm_interconnect_0:mbox_m_w2_avmm_msg_sender_read -> mbox_m_w2:avmm_snd_read
	wire         mm_interconnect_0_mbox_m_w2_avmm_msg_sender_write;                   // mm_interconnect_0:mbox_m_w2_avmm_msg_sender_write -> mbox_m_w2:avmm_snd_write
	wire  [31:0] mm_interconnect_0_mbox_m_w2_avmm_msg_sender_writedata;               // mm_interconnect_0:mbox_m_w2_avmm_msg_sender_writedata -> mbox_m_w2:avmm_snd_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w3_avmm_msg_sender_readdata;                // mbox_m_w3:avmm_snd_readdata -> mm_interconnect_0:mbox_m_w3_avmm_msg_sender_readdata
	wire         mm_interconnect_0_mbox_m_w3_avmm_msg_sender_waitrequest;             // mbox_m_w3:avmm_snd_waitrequest -> mm_interconnect_0:mbox_m_w3_avmm_msg_sender_waitrequest
	wire   [1:0] mm_interconnect_0_mbox_m_w3_avmm_msg_sender_address;                 // mm_interconnect_0:mbox_m_w3_avmm_msg_sender_address -> mbox_m_w3:avmm_snd_address
	wire         mm_interconnect_0_mbox_m_w3_avmm_msg_sender_read;                    // mm_interconnect_0:mbox_m_w3_avmm_msg_sender_read -> mbox_m_w3:avmm_snd_read
	wire         mm_interconnect_0_mbox_m_w3_avmm_msg_sender_write;                   // mm_interconnect_0:mbox_m_w3_avmm_msg_sender_write -> mbox_m_w3:avmm_snd_write
	wire  [31:0] mm_interconnect_0_mbox_m_w3_avmm_msg_sender_writedata;               // mm_interconnect_0:mbox_m_w3_avmm_msg_sender_writedata -> mbox_m_w3:avmm_snd_writedata
	wire  [31:0] mm_interconnect_0_performance_counter_0_control_slave_readdata;      // performance_counter_0:readdata -> mm_interconnect_0:performance_counter_0_control_slave_readdata
	wire   [2:0] mm_interconnect_0_performance_counter_0_control_slave_address;       // mm_interconnect_0:performance_counter_0_control_slave_address -> performance_counter_0:address
	wire         mm_interconnect_0_performance_counter_0_control_slave_begintransfer; // mm_interconnect_0:performance_counter_0_control_slave_begintransfer -> performance_counter_0:begintransfer
	wire         mm_interconnect_0_performance_counter_0_control_slave_write;         // mm_interconnect_0:performance_counter_0_control_slave_write -> performance_counter_0:write
	wire  [31:0] mm_interconnect_0_performance_counter_0_control_slave_writedata;     // mm_interconnect_0:performance_counter_0_control_slave_writedata -> performance_counter_0:writedata
	wire  [31:0] mm_interconnect_0_manager_debug_mem_slave_readdata;                  // manager:debug_mem_slave_readdata -> mm_interconnect_0:manager_debug_mem_slave_readdata
	wire         mm_interconnect_0_manager_debug_mem_slave_waitrequest;               // manager:debug_mem_slave_waitrequest -> mm_interconnect_0:manager_debug_mem_slave_waitrequest
	wire         mm_interconnect_0_manager_debug_mem_slave_debugaccess;               // mm_interconnect_0:manager_debug_mem_slave_debugaccess -> manager:debug_mem_slave_debugaccess
	wire   [8:0] mm_interconnect_0_manager_debug_mem_slave_address;                   // mm_interconnect_0:manager_debug_mem_slave_address -> manager:debug_mem_slave_address
	wire         mm_interconnect_0_manager_debug_mem_slave_read;                      // mm_interconnect_0:manager_debug_mem_slave_read -> manager:debug_mem_slave_read
	wire   [3:0] mm_interconnect_0_manager_debug_mem_slave_byteenable;                // mm_interconnect_0:manager_debug_mem_slave_byteenable -> manager:debug_mem_slave_byteenable
	wire         mm_interconnect_0_manager_debug_mem_slave_write;                     // mm_interconnect_0:manager_debug_mem_slave_write -> manager:debug_mem_slave_write
	wire  [31:0] mm_interconnect_0_manager_debug_mem_slave_writedata;                 // mm_interconnect_0:manager_debug_mem_slave_writedata -> manager:debug_mem_slave_writedata
	wire  [31:0] mm_interconnect_0_req_fifo_out_readdata;                             // req_fifo:avalonmm_read_slave_readdata -> mm_interconnect_0:req_fifo_out_readdata
	wire         mm_interconnect_0_req_fifo_out_waitrequest;                          // req_fifo:avalonmm_read_slave_waitrequest -> mm_interconnect_0:req_fifo_out_waitrequest
	wire         mm_interconnect_0_req_fifo_out_read;                                 // mm_interconnect_0:req_fifo_out_read -> req_fifo:avalonmm_read_slave_read
	wire  [31:0] mm_interconnect_0_req_fifo_out_csr_readdata;                         // req_fifo:rdclk_control_slave_readdata -> mm_interconnect_0:req_fifo_out_csr_readdata
	wire   [2:0] mm_interconnect_0_req_fifo_out_csr_address;                          // mm_interconnect_0:req_fifo_out_csr_address -> req_fifo:rdclk_control_slave_address
	wire         mm_interconnect_0_req_fifo_out_csr_read;                             // mm_interconnect_0:req_fifo_out_csr_read -> req_fifo:rdclk_control_slave_read
	wire         mm_interconnect_0_req_fifo_out_csr_write;                            // mm_interconnect_0:req_fifo_out_csr_write -> req_fifo:rdclk_control_slave_write
	wire  [31:0] mm_interconnect_0_req_fifo_out_csr_writedata;                        // mm_interconnect_0:req_fifo_out_csr_writedata -> req_fifo:rdclk_control_slave_writedata
	wire  [31:0] mm_interconnect_0_altpll_0_pll_slave_readdata;                       // altpll_0:readdata -> mm_interconnect_0:altpll_0_pll_slave_readdata
	wire   [1:0] mm_interconnect_0_altpll_0_pll_slave_address;                        // mm_interconnect_0:altpll_0_pll_slave_address -> altpll_0:address
	wire         mm_interconnect_0_altpll_0_pll_slave_read;                           // mm_interconnect_0:altpll_0_pll_slave_read -> altpll_0:read
	wire         mm_interconnect_0_altpll_0_pll_slave_write;                          // mm_interconnect_0:altpll_0_pll_slave_write -> altpll_0:write
	wire  [31:0] mm_interconnect_0_altpll_0_pll_slave_writedata;                      // mm_interconnect_0:altpll_0_pll_slave_writedata -> altpll_0:writedata
	wire         mm_interconnect_0_shared_ocm_s1_chipselect;                          // mm_interconnect_0:shared_ocm_s1_chipselect -> shared_ocm:chipselect
	wire  [31:0] mm_interconnect_0_shared_ocm_s1_readdata;                            // shared_ocm:readdata -> mm_interconnect_0:shared_ocm_s1_readdata
	wire   [7:0] mm_interconnect_0_shared_ocm_s1_address;                             // mm_interconnect_0:shared_ocm_s1_address -> shared_ocm:address
	wire   [3:0] mm_interconnect_0_shared_ocm_s1_byteenable;                          // mm_interconnect_0:shared_ocm_s1_byteenable -> shared_ocm:byteenable
	wire         mm_interconnect_0_shared_ocm_s1_write;                               // mm_interconnect_0:shared_ocm_s1_write -> shared_ocm:write
	wire  [31:0] mm_interconnect_0_shared_ocm_s1_writedata;                           // mm_interconnect_0:shared_ocm_s1_writedata -> shared_ocm:writedata
	wire         mm_interconnect_0_shared_ocm_s1_clken;                               // mm_interconnect_0:shared_ocm_s1_clken -> shared_ocm:clken
	wire  [31:0] mm_interconnect_0_sdram_0_sdout_readdata;                            // sdram_0:sdout_readdata -> mm_interconnect_0:sdram_0_sdout_readdata
	wire         mm_interconnect_0_sdram_0_sdout_waitrequest;                         // sdram_0:sdout_waitrequest -> mm_interconnect_0:sdram_0_sdout_waitrequest
	wire         mm_interconnect_0_sdram_0_sdout_debugaccess;                         // mm_interconnect_0:sdram_0_sdout_debugaccess -> sdram_0:sdout_debugaccess
	wire  [25:0] mm_interconnect_0_sdram_0_sdout_address;                             // mm_interconnect_0:sdram_0_sdout_address -> sdram_0:sdout_address
	wire         mm_interconnect_0_sdram_0_sdout_read;                                // mm_interconnect_0:sdram_0_sdout_read -> sdram_0:sdout_read
	wire   [3:0] mm_interconnect_0_sdram_0_sdout_byteenable;                          // mm_interconnect_0:sdram_0_sdout_byteenable -> sdram_0:sdout_byteenable
	wire         mm_interconnect_0_sdram_0_sdout_readdatavalid;                       // sdram_0:sdout_readdatavalid -> mm_interconnect_0:sdram_0_sdout_readdatavalid
	wire         mm_interconnect_0_sdram_0_sdout_write;                               // mm_interconnect_0:sdram_0_sdout_write -> sdram_0:sdout_write
	wire  [31:0] mm_interconnect_0_sdram_0_sdout_writedata;                           // mm_interconnect_0:sdram_0_sdout_writedata -> sdram_0:sdout_writedata
	wire   [0:0] mm_interconnect_0_sdram_0_sdout_burstcount;                          // mm_interconnect_0:sdram_0_sdout_burstcount -> sdram_0:sdout_burstcount
	wire  [31:0] mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_readdata;              // mbox_m_w3:avmm_rcv_readdata -> mm_interconnect_0:mbox_m_w3_avmm_msg_receiver_readdata
	wire   [1:0] mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_address;               // mm_interconnect_0:mbox_m_w3_avmm_msg_receiver_address -> mbox_m_w3:avmm_rcv_address
	wire         mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_read;                  // mm_interconnect_0:mbox_m_w3_avmm_msg_receiver_read -> mbox_m_w3:avmm_rcv_read
	wire         mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_write;                 // mm_interconnect_0:mbox_m_w3_avmm_msg_receiver_write -> mbox_m_w3:avmm_rcv_write
	wire  [31:0] mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_writedata;             // mm_interconnect_0:mbox_m_w3_avmm_msg_receiver_writedata -> mbox_m_w3:avmm_rcv_writedata
	wire         mm_interconnect_0_req_fifo_in_waitrequest;                           // req_fifo:avalonmm_write_slave_waitrequest -> mm_interconnect_0:req_fifo_in_waitrequest
	wire         mm_interconnect_0_req_fifo_in_write;                                 // mm_interconnect_0:req_fifo_in_write -> req_fifo:avalonmm_write_slave_write
	wire  [31:0] mm_interconnect_0_req_fifo_in_writedata;                             // mm_interconnect_0:req_fifo_in_writedata -> req_fifo:avalonmm_write_slave_writedata
	wire  [31:0] mm_interconnect_0_req_fifo_in_csr_readdata;                          // req_fifo:wrclk_control_slave_readdata -> mm_interconnect_0:req_fifo_in_csr_readdata
	wire   [2:0] mm_interconnect_0_req_fifo_in_csr_address;                           // mm_interconnect_0:req_fifo_in_csr_address -> req_fifo:wrclk_control_slave_address
	wire         mm_interconnect_0_req_fifo_in_csr_read;                              // mm_interconnect_0:req_fifo_in_csr_read -> req_fifo:wrclk_control_slave_read
	wire         mm_interconnect_0_req_fifo_in_csr_write;                             // mm_interconnect_0:req_fifo_in_csr_write -> req_fifo:wrclk_control_slave_write
	wire  [31:0] mm_interconnect_0_req_fifo_in_csr_writedata;                         // mm_interconnect_0:req_fifo_in_csr_writedata -> req_fifo:wrclk_control_slave_writedata
	wire         mm_interconnect_0_shared_ocm_s2_chipselect;                          // mm_interconnect_0:shared_ocm_s2_chipselect -> shared_ocm:chipselect2
	wire  [31:0] mm_interconnect_0_shared_ocm_s2_readdata;                            // shared_ocm:readdata2 -> mm_interconnect_0:shared_ocm_s2_readdata
	wire   [7:0] mm_interconnect_0_shared_ocm_s2_address;                             // mm_interconnect_0:shared_ocm_s2_address -> shared_ocm:address2
	wire   [3:0] mm_interconnect_0_shared_ocm_s2_byteenable;                          // mm_interconnect_0:shared_ocm_s2_byteenable -> shared_ocm:byteenable2
	wire         mm_interconnect_0_shared_ocm_s2_write;                               // mm_interconnect_0:shared_ocm_s2_write -> shared_ocm:write2
	wire  [31:0] mm_interconnect_0_shared_ocm_s2_writedata;                           // mm_interconnect_0:shared_ocm_s2_writedata -> shared_ocm:writedata2
	wire         mm_interconnect_0_shared_ocm_s2_clken;                               // mm_interconnect_0:shared_ocm_s2_clken -> shared_ocm:clken2
	wire  [31:0] mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_readdata;              // mbox_m_w2:avmm_rcv_readdata -> mm_interconnect_0:mbox_m_w2_avmm_msg_receiver_readdata
	wire   [1:0] mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_address;               // mm_interconnect_0:mbox_m_w2_avmm_msg_receiver_address -> mbox_m_w2:avmm_rcv_address
	wire         mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_read;                  // mm_interconnect_0:mbox_m_w2_avmm_msg_receiver_read -> mbox_m_w2:avmm_rcv_read
	wire         mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_write;                 // mm_interconnect_0:mbox_m_w2_avmm_msg_receiver_write -> mbox_m_w2:avmm_rcv_write
	wire  [31:0] mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_writedata;             // mm_interconnect_0:mbox_m_w2_avmm_msg_receiver_writedata -> mbox_m_w2:avmm_rcv_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_readdata;              // mbox_m_w0:avmm_rcv_readdata -> mm_interconnect_0:mbox_m_w0_avmm_msg_receiver_readdata
	wire   [1:0] mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_address;               // mm_interconnect_0:mbox_m_w0_avmm_msg_receiver_address -> mbox_m_w0:avmm_rcv_address
	wire         mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_read;                  // mm_interconnect_0:mbox_m_w0_avmm_msg_receiver_read -> mbox_m_w0:avmm_rcv_read
	wire         mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_write;                 // mm_interconnect_0:mbox_m_w0_avmm_msg_receiver_write -> mbox_m_w0:avmm_rcv_write
	wire  [31:0] mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_writedata;             // mm_interconnect_0:mbox_m_w0_avmm_msg_receiver_writedata -> mbox_m_w0:avmm_rcv_writedata
	wire  [31:0] mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_readdata;              // mbox_m_w1:avmm_rcv_readdata -> mm_interconnect_0:mbox_m_w1_avmm_msg_receiver_readdata
	wire   [1:0] mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_address;               // mm_interconnect_0:mbox_m_w1_avmm_msg_receiver_address -> mbox_m_w1:avmm_rcv_address
	wire         mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_read;                  // mm_interconnect_0:mbox_m_w1_avmm_msg_receiver_read -> mbox_m_w1:avmm_rcv_read
	wire         mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_write;                 // mm_interconnect_0:mbox_m_w1_avmm_msg_receiver_write -> mbox_m_w1:avmm_rcv_write
	wire  [31:0] mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_writedata;             // mm_interconnect_0:mbox_m_w1_avmm_msg_receiver_writedata -> mbox_m_w1:avmm_rcv_writedata
	wire         irq_mapper_receiver0_irq;                                            // jtag_uart_0:av_irq -> irq_mapper:receiver0_irq
	wire  [31:0] manager_irq_irq;                                                     // irq_mapper:sender_irq -> manager:irq
	wire         rst_controller_reset_out_reset;                                      // rst_controller:reset_out -> [altpll_0:reset, mm_interconnect_0:altpll_0_inclk_interface_reset_reset_bridge_in_reset_reset]
	wire         rst_controller_001_reset_out_reset;                                  // rst_controller_001:reset_out -> [jtag_uart_0:rst_n, mbox_m_w0:rst_n, mbox_m_w1:rst_n, mbox_m_w2:rst_n, mbox_m_w3:rst_n, mm_interconnect_0:jtag_uart_0_reset_reset_bridge_in_reset_reset, mm_interconnect_0:worker0_reset_reset_bridge_in_reset_reset, performance_counter_0:reset_n, req_fifo:rdreset_n, req_fifo:wrreset_n]
	wire         manager_debug_reset_request_reset;                                   // manager:debug_reset_request -> [rst_controller_001:reset_in1, rst_controller_003:reset_in1, rst_controller_004:reset_in1, rst_controller_005:reset_in1, rst_controller_006:reset_in1]
	wire         rst_controller_002_reset_out_reset;                                  // rst_controller_002:reset_out -> [irq_mapper:reset, manager:reset_n, mm_interconnect_0:manager_reset_reset_bridge_in_reset_reset, mm_interconnect_0:sdram_0_reset_reset_bridge_in_reset_reset, rst_translator:in_reset, shared_ocm:reset]
	wire         rst_controller_002_reset_out_reset_req;                              // rst_controller_002:reset_req -> [manager:reset_req, rst_translator:reset_req_in, shared_ocm:reset_req]
	wire         rst_controller_003_reset_out_reset;                                  // rst_controller_003:reset_out -> worker0:reset_reset_n
	wire         rst_controller_004_reset_out_reset;                                  // rst_controller_004:reset_out -> worker1:reset_reset_n
	wire         rst_controller_005_reset_out_reset;                                  // rst_controller_005:reset_out -> worker2:reset_reset_n
	wire         rst_controller_006_reset_out_reset;                                  // rst_controller_006:reset_out -> worker3:reset_reset_n

	system_altpll_0 altpll_0 (
		.clk                (clk_clk),                                        //       inclk_interface.clk
		.reset              (rst_controller_reset_out_reset),                 // inclk_interface_reset.reset
		.read               (mm_interconnect_0_altpll_0_pll_slave_read),      //             pll_slave.read
		.write              (mm_interconnect_0_altpll_0_pll_slave_write),     //                      .write
		.address            (mm_interconnect_0_altpll_0_pll_slave_address),   //                      .address
		.readdata           (mm_interconnect_0_altpll_0_pll_slave_readdata),  //                      .readdata
		.writedata          (mm_interconnect_0_altpll_0_pll_slave_writedata), //                      .writedata
		.c0                 (altpll_0_c0_clk),                                //                    c0.clk
		.c1                 (sdram_clk_clk),                                  //                    c1.clk
		.scandone           (),                                               //           (terminated)
		.scandataout        (),                                               //           (terminated)
		.areset             (1'b0),                                           //           (terminated)
		.locked             (),                                               //           (terminated)
		.phasedone          (),                                               //           (terminated)
		.phasecounterselect (4'b0000),                                        //           (terminated)
		.phaseupdown        (1'b0),                                           //           (terminated)
		.phasestep          (1'b0),                                           //           (terminated)
		.scanclk            (1'b0),                                           //           (terminated)
		.scanclkena         (1'b0),                                           //           (terminated)
		.scandata           (1'b0),                                           //           (terminated)
		.configupdate       (1'b0)                                            //           (terminated)
	);

	system_jtag_uart_0 jtag_uart_0 (
		.clk            (altpll_0_c0_clk),                                             //               clk.clk
		.rst_n          (~rst_controller_001_reset_out_reset),                         //             reset.reset_n
		.av_chipselect  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),  // avalon_jtag_slave.chipselect
		.av_address     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),     //                  .address
		.av_read_n      (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),       //                  .read_n
		.av_readdata    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),    //                  .readdata
		.av_write_n     (~mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),      //                  .write_n
		.av_writedata   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),   //                  .writedata
		.av_waitrequest (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest), //                  .waitrequest
		.av_irq         (irq_mapper_receiver0_irq)                                     //               irq.irq
	);

	system_manager manager (
		.clk                                 (altpll_0_c0_clk),                                       //                       clk.clk
		.reset_n                             (~rst_controller_002_reset_out_reset),                   //                     reset.reset_n
		.reset_req                           (rst_controller_002_reset_out_reset_req),                //                          .reset_req
		.d_address                           (manager_data_master_address),                           //               data_master.address
		.d_byteenable                        (manager_data_master_byteenable),                        //                          .byteenable
		.d_read                              (manager_data_master_read),                              //                          .read
		.d_readdata                          (manager_data_master_readdata),                          //                          .readdata
		.d_waitrequest                       (manager_data_master_waitrequest),                       //                          .waitrequest
		.d_write                             (manager_data_master_write),                             //                          .write
		.d_writedata                         (manager_data_master_writedata),                         //                          .writedata
		.d_readdatavalid                     (manager_data_master_readdatavalid),                     //                          .readdatavalid
		.debug_mem_slave_debugaccess_to_roms (manager_data_master_debugaccess),                       //                          .debugaccess
		.i_address                           (manager_instruction_master_address),                    //        instruction_master.address
		.i_read                              (manager_instruction_master_read),                       //                          .read
		.i_readdata                          (manager_instruction_master_readdata),                   //                          .readdata
		.i_waitrequest                       (manager_instruction_master_waitrequest),                //                          .waitrequest
		.i_readdatavalid                     (manager_instruction_master_readdatavalid),              //                          .readdatavalid
		.irq                                 (manager_irq_irq),                                       //                       irq.irq
		.debug_reset_request                 (manager_debug_reset_request_reset),                     //       debug_reset_request.reset
		.debug_mem_slave_address             (mm_interconnect_0_manager_debug_mem_slave_address),     //           debug_mem_slave.address
		.debug_mem_slave_byteenable          (mm_interconnect_0_manager_debug_mem_slave_byteenable),  //                          .byteenable
		.debug_mem_slave_debugaccess         (mm_interconnect_0_manager_debug_mem_slave_debugaccess), //                          .debugaccess
		.debug_mem_slave_read                (mm_interconnect_0_manager_debug_mem_slave_read),        //                          .read
		.debug_mem_slave_readdata            (mm_interconnect_0_manager_debug_mem_slave_readdata),    //                          .readdata
		.debug_mem_slave_waitrequest         (mm_interconnect_0_manager_debug_mem_slave_waitrequest), //                          .waitrequest
		.debug_mem_slave_write               (mm_interconnect_0_manager_debug_mem_slave_write),       //                          .write
		.debug_mem_slave_writedata           (mm_interconnect_0_manager_debug_mem_slave_writedata),   //                          .writedata
		.dummy_ci_port                       ()                                                       // custom_instruction_master.readra
	);

	altera_avalon_mailbox #(
		.DWIDTH (32),
		.AWIDTH (2)
	) mbox_m_w0 (
		.clk                  (altpll_0_c0_clk),                                         //               clk.clk
		.rst_n                (~rst_controller_001_reset_out_reset),                     //             rst_n.reset_n
		.avmm_snd_address     (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_address),     //   avmm_msg_sender.address
		.avmm_snd_writedata   (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_writedata),   //                  .writedata
		.avmm_snd_write       (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_write),       //                  .write
		.avmm_snd_read        (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_read),        //                  .read
		.avmm_snd_readdata    (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_readdata),    //                  .readdata
		.avmm_snd_waitrequest (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_waitrequest), //                  .waitrequest
		.avmm_rcv_address     (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_address),   // avmm_msg_receiver.address
		.avmm_rcv_read        (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_read),      //                  .read
		.avmm_rcv_writedata   (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_writedata), //                  .writedata
		.avmm_rcv_write       (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_write),     //                  .write
		.avmm_rcv_readdata    (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_readdata),  //                  .readdata
		.irq_space            (),                                                        //       (terminated)
		.irq_msg              ()                                                         //       (terminated)
	);

	altera_avalon_mailbox #(
		.DWIDTH (32),
		.AWIDTH (2)
	) mbox_m_w1 (
		.clk                  (altpll_0_c0_clk),                                         //               clk.clk
		.rst_n                (~rst_controller_001_reset_out_reset),                     //             rst_n.reset_n
		.avmm_snd_address     (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_address),     //   avmm_msg_sender.address
		.avmm_snd_writedata   (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_writedata),   //                  .writedata
		.avmm_snd_write       (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_write),       //                  .write
		.avmm_snd_read        (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_read),        //                  .read
		.avmm_snd_readdata    (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_readdata),    //                  .readdata
		.avmm_snd_waitrequest (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_waitrequest), //                  .waitrequest
		.avmm_rcv_address     (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_address),   // avmm_msg_receiver.address
		.avmm_rcv_read        (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_read),      //                  .read
		.avmm_rcv_writedata   (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_writedata), //                  .writedata
		.avmm_rcv_write       (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_write),     //                  .write
		.avmm_rcv_readdata    (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_readdata),  //                  .readdata
		.irq_space            (),                                                        //       (terminated)
		.irq_msg              ()                                                         //       (terminated)
	);

	altera_avalon_mailbox #(
		.DWIDTH (32),
		.AWIDTH (2)
	) mbox_m_w2 (
		.clk                  (altpll_0_c0_clk),                                         //               clk.clk
		.rst_n                (~rst_controller_001_reset_out_reset),                     //             rst_n.reset_n
		.avmm_snd_address     (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_address),     //   avmm_msg_sender.address
		.avmm_snd_writedata   (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_writedata),   //                  .writedata
		.avmm_snd_write       (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_write),       //                  .write
		.avmm_snd_read        (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_read),        //                  .read
		.avmm_snd_readdata    (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_readdata),    //                  .readdata
		.avmm_snd_waitrequest (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_waitrequest), //                  .waitrequest
		.avmm_rcv_address     (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_address),   // avmm_msg_receiver.address
		.avmm_rcv_read        (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_read),      //                  .read
		.avmm_rcv_writedata   (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_writedata), //                  .writedata
		.avmm_rcv_write       (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_write),     //                  .write
		.avmm_rcv_readdata    (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_readdata),  //                  .readdata
		.irq_space            (),                                                        //       (terminated)
		.irq_msg              ()                                                         //       (terminated)
	);

	altera_avalon_mailbox #(
		.DWIDTH (32),
		.AWIDTH (2)
	) mbox_m_w3 (
		.clk                  (altpll_0_c0_clk),                                         //               clk.clk
		.rst_n                (~rst_controller_001_reset_out_reset),                     //             rst_n.reset_n
		.avmm_snd_address     (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_address),     //   avmm_msg_sender.address
		.avmm_snd_writedata   (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_writedata),   //                  .writedata
		.avmm_snd_write       (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_write),       //                  .write
		.avmm_snd_read        (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_read),        //                  .read
		.avmm_snd_readdata    (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_readdata),    //                  .readdata
		.avmm_snd_waitrequest (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_waitrequest), //                  .waitrequest
		.avmm_rcv_address     (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_address),   // avmm_msg_receiver.address
		.avmm_rcv_read        (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_read),      //                  .read
		.avmm_rcv_writedata   (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_writedata), //                  .writedata
		.avmm_rcv_write       (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_write),     //                  .write
		.avmm_rcv_readdata    (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_readdata),  //                  .readdata
		.irq_space            (),                                                        //       (terminated)
		.irq_msg              ()                                                         //       (terminated)
	);

	system_performance_counter_0 performance_counter_0 (
		.clk           (altpll_0_c0_clk),                                                     //           clk.clk
		.reset_n       (~rst_controller_001_reset_out_reset),                                 //         reset.reset_n
		.address       (mm_interconnect_0_performance_counter_0_control_slave_address),       // control_slave.address
		.begintransfer (mm_interconnect_0_performance_counter_0_control_slave_begintransfer), //              .begintransfer
		.readdata      (mm_interconnect_0_performance_counter_0_control_slave_readdata),      //              .readdata
		.write         (mm_interconnect_0_performance_counter_0_control_slave_write),         //              .write
		.writedata     (mm_interconnect_0_performance_counter_0_control_slave_writedata)      //              .writedata
	);

	system_req_fifo req_fifo (
		.wrclock                          (altpll_0_c0_clk),                              //    clk_in.clk
		.wrreset_n                        (~rst_controller_001_reset_out_reset),          //  reset_in.reset_n
		.rdclock                          (altpll_0_c0_clk),                              //   clk_out.clk
		.rdreset_n                        (~rst_controller_001_reset_out_reset),          // reset_out.reset_n
		.avalonmm_write_slave_writedata   (mm_interconnect_0_req_fifo_in_writedata),      //        in.writedata
		.avalonmm_write_slave_write       (mm_interconnect_0_req_fifo_in_write),          //          .write
		.avalonmm_write_slave_waitrequest (mm_interconnect_0_req_fifo_in_waitrequest),    //          .waitrequest
		.avalonmm_read_slave_readdata     (mm_interconnect_0_req_fifo_out_readdata),      //       out.readdata
		.avalonmm_read_slave_read         (mm_interconnect_0_req_fifo_out_read),          //          .read
		.avalonmm_read_slave_waitrequest  (mm_interconnect_0_req_fifo_out_waitrequest),   //          .waitrequest
		.rdclk_control_slave_address      (mm_interconnect_0_req_fifo_out_csr_address),   //   out_csr.address
		.rdclk_control_slave_read         (mm_interconnect_0_req_fifo_out_csr_read),      //          .read
		.rdclk_control_slave_writedata    (mm_interconnect_0_req_fifo_out_csr_writedata), //          .writedata
		.rdclk_control_slave_write        (mm_interconnect_0_req_fifo_out_csr_write),     //          .write
		.rdclk_control_slave_readdata     (mm_interconnect_0_req_fifo_out_csr_readdata),  //          .readdata
		.wrclk_control_slave_address      (mm_interconnect_0_req_fifo_in_csr_address),    //    in_csr.address
		.wrclk_control_slave_read         (mm_interconnect_0_req_fifo_in_csr_read),       //          .read
		.wrclk_control_slave_writedata    (mm_interconnect_0_req_fifo_in_csr_writedata),  //          .writedata
		.wrclk_control_slave_write        (mm_interconnect_0_req_fifo_in_csr_write),      //          .write
		.wrclk_control_slave_readdata     (mm_interconnect_0_req_fifo_in_csr_readdata)    //          .readdata
	);

	system_sdram_0 sdram_0 (
		.clk_clk             (altpll_0_c0_clk),                               //   clk.clk
		.reset_reset_n       (reset_reset_n),                                 // reset.reset_n
		.sdout_waitrequest   (mm_interconnect_0_sdram_0_sdout_waitrequest),   // sdout.waitrequest
		.sdout_readdata      (mm_interconnect_0_sdram_0_sdout_readdata),      //      .readdata
		.sdout_readdatavalid (mm_interconnect_0_sdram_0_sdout_readdatavalid), //      .readdatavalid
		.sdout_burstcount    (mm_interconnect_0_sdram_0_sdout_burstcount),    //      .burstcount
		.sdout_writedata     (mm_interconnect_0_sdram_0_sdout_writedata),     //      .writedata
		.sdout_address       (mm_interconnect_0_sdram_0_sdout_address),       //      .address
		.sdout_write         (mm_interconnect_0_sdram_0_sdout_write),         //      .write
		.sdout_read          (mm_interconnect_0_sdram_0_sdout_read),          //      .read
		.sdout_byteenable    (mm_interconnect_0_sdram_0_sdout_byteenable),    //      .byteenable
		.sdout_debugaccess   (mm_interconnect_0_sdram_0_sdout_debugaccess),   //      .debugaccess
		.sdram_addr          (wire_addr),                                     // sdram.addr
		.sdram_ba            (wire_ba),                                       //      .ba
		.sdram_cas_n         (wire_cas_n),                                    //      .cas_n
		.sdram_cke           (wire_cke),                                      //      .cke
		.sdram_cs_n          (wire_cs_n),                                     //      .cs_n
		.sdram_dq            (wire_dq),                                       //      .dq
		.sdram_dqm           (wire_dqm),                                      //      .dqm
		.sdram_ras_n         (wire_ras_n),                                    //      .ras_n
		.sdram_we_n          (wire_we_n)                                      //      .we_n
	);

	system_shared_ocm shared_ocm (
		.address     (mm_interconnect_0_shared_ocm_s1_address),    //     s1.address
		.clken       (mm_interconnect_0_shared_ocm_s1_clken),      //       .clken
		.chipselect  (mm_interconnect_0_shared_ocm_s1_chipselect), //       .chipselect
		.write       (mm_interconnect_0_shared_ocm_s1_write),      //       .write
		.readdata    (mm_interconnect_0_shared_ocm_s1_readdata),   //       .readdata
		.writedata   (mm_interconnect_0_shared_ocm_s1_writedata),  //       .writedata
		.byteenable  (mm_interconnect_0_shared_ocm_s1_byteenable), //       .byteenable
		.address2    (mm_interconnect_0_shared_ocm_s2_address),    //     s2.address
		.chipselect2 (mm_interconnect_0_shared_ocm_s2_chipselect), //       .chipselect
		.clken2      (mm_interconnect_0_shared_ocm_s2_clken),      //       .clken
		.write2      (mm_interconnect_0_shared_ocm_s2_write),      //       .write
		.readdata2   (mm_interconnect_0_shared_ocm_s2_readdata),   //       .readdata
		.writedata2  (mm_interconnect_0_shared_ocm_s2_writedata),  //       .writedata
		.byteenable2 (mm_interconnect_0_shared_ocm_s2_byteenable), //       .byteenable
		.clk         (altpll_0_c0_clk),                            //   clk1.clk
		.reset       (rst_controller_002_reset_out_reset),         // reset1.reset
		.reset_req   (rst_controller_002_reset_out_reset_req),     //       .reset_req
		.freeze      (1'b0)                                        // (terminated)
	);

	system_worker0 worker0 (
		.clk_clk            (altpll_0_c0_clk),                     //   clk.clk
		.reset_reset_n      (~rst_controller_003_reset_out_reset), // reset.reset_n
		.wout_waitrequest   (worker0_wout_waitrequest),            //  wout.waitrequest
		.wout_readdata      (worker0_wout_readdata),               //      .readdata
		.wout_readdatavalid (worker0_wout_readdatavalid),          //      .readdatavalid
		.wout_burstcount    (worker0_wout_burstcount),             //      .burstcount
		.wout_writedata     (worker0_wout_writedata),              //      .writedata
		.wout_address       (worker0_wout_address),                //      .address
		.wout_write         (worker0_wout_write),                  //      .write
		.wout_read          (worker0_wout_read),                   //      .read
		.wout_byteenable    (worker0_wout_byteenable),             //      .byteenable
		.wout_debugaccess   (worker0_wout_debugaccess)             //      .debugaccess
	);

	system_worker1 worker1 (
		.clk_clk            (altpll_0_c0_clk),                     //   clk.clk
		.reset_reset_n      (~rst_controller_004_reset_out_reset), // reset.reset_n
		.wout_waitrequest   (worker1_wout_waitrequest),            //  wout.waitrequest
		.wout_readdata      (worker1_wout_readdata),               //      .readdata
		.wout_readdatavalid (worker1_wout_readdatavalid),          //      .readdatavalid
		.wout_burstcount    (worker1_wout_burstcount),             //      .burstcount
		.wout_writedata     (worker1_wout_writedata),              //      .writedata
		.wout_address       (worker1_wout_address),                //      .address
		.wout_write         (worker1_wout_write),                  //      .write
		.wout_read          (worker1_wout_read),                   //      .read
		.wout_byteenable    (worker1_wout_byteenable),             //      .byteenable
		.wout_debugaccess   (worker1_wout_debugaccess)             //      .debugaccess
	);

	system_worker2 worker2 (
		.clk_clk            (altpll_0_c0_clk),                     //   clk.clk
		.reset_reset_n      (~rst_controller_005_reset_out_reset), // reset.reset_n
		.wout_waitrequest   (worker2_wout_waitrequest),            //  wout.waitrequest
		.wout_readdata      (worker2_wout_readdata),               //      .readdata
		.wout_readdatavalid (worker2_wout_readdatavalid),          //      .readdatavalid
		.wout_burstcount    (worker2_wout_burstcount),             //      .burstcount
		.wout_writedata     (worker2_wout_writedata),              //      .writedata
		.wout_address       (worker2_wout_address),                //      .address
		.wout_write         (worker2_wout_write),                  //      .write
		.wout_read          (worker2_wout_read),                   //      .read
		.wout_byteenable    (worker2_wout_byteenable),             //      .byteenable
		.wout_debugaccess   (worker2_wout_debugaccess)             //      .debugaccess
	);

	system_worker3 worker3 (
		.clk_clk            (altpll_0_c0_clk),                     //   clk.clk
		.reset_reset_n      (~rst_controller_006_reset_out_reset), // reset.reset_n
		.wout_waitrequest   (worker3_wout_waitrequest),            //  wout.waitrequest
		.wout_readdata      (worker3_wout_readdata),               //      .readdata
		.wout_readdatavalid (worker3_wout_readdatavalid),          //      .readdatavalid
		.wout_burstcount    (worker3_wout_burstcount),             //      .burstcount
		.wout_writedata     (worker3_wout_writedata),              //      .writedata
		.wout_address       (worker3_wout_address),                //      .address
		.wout_write         (worker3_wout_write),                  //      .write
		.wout_read          (worker3_wout_read),                   //      .read
		.wout_byteenable    (worker3_wout_byteenable),             //      .byteenable
		.wout_debugaccess   (worker3_wout_debugaccess)             //      .debugaccess
	);

	system_mm_interconnect_0 mm_interconnect_0 (
		.altpll_0_c0_clk                                            (altpll_0_c0_clk),                                                     //                                          altpll_0_c0.clk
		.clk_0_clk_clk                                              (clk_clk),                                                             //                                            clk_0_clk.clk
		.altpll_0_inclk_interface_reset_reset_bridge_in_reset_reset (rst_controller_reset_out_reset),                                      // altpll_0_inclk_interface_reset_reset_bridge_in_reset.reset
		.jtag_uart_0_reset_reset_bridge_in_reset_reset              (rst_controller_001_reset_out_reset),                                  //              jtag_uart_0_reset_reset_bridge_in_reset.reset
		.manager_reset_reset_bridge_in_reset_reset                  (rst_controller_002_reset_out_reset),                                  //                  manager_reset_reset_bridge_in_reset.reset
		.sdram_0_reset_reset_bridge_in_reset_reset                  (rst_controller_002_reset_out_reset),                                  //                  sdram_0_reset_reset_bridge_in_reset.reset
		.worker0_reset_reset_bridge_in_reset_reset                  (rst_controller_001_reset_out_reset),                                  //                  worker0_reset_reset_bridge_in_reset.reset
		.manager_data_master_address                                (manager_data_master_address),                                         //                                  manager_data_master.address
		.manager_data_master_waitrequest                            (manager_data_master_waitrequest),                                     //                                                     .waitrequest
		.manager_data_master_byteenable                             (manager_data_master_byteenable),                                      //                                                     .byteenable
		.manager_data_master_read                                   (manager_data_master_read),                                            //                                                     .read
		.manager_data_master_readdata                               (manager_data_master_readdata),                                        //                                                     .readdata
		.manager_data_master_readdatavalid                          (manager_data_master_readdatavalid),                                   //                                                     .readdatavalid
		.manager_data_master_write                                  (manager_data_master_write),                                           //                                                     .write
		.manager_data_master_writedata                              (manager_data_master_writedata),                                       //                                                     .writedata
		.manager_data_master_debugaccess                            (manager_data_master_debugaccess),                                     //                                                     .debugaccess
		.manager_instruction_master_address                         (manager_instruction_master_address),                                  //                           manager_instruction_master.address
		.manager_instruction_master_waitrequest                     (manager_instruction_master_waitrequest),                              //                                                     .waitrequest
		.manager_instruction_master_read                            (manager_instruction_master_read),                                     //                                                     .read
		.manager_instruction_master_readdata                        (manager_instruction_master_readdata),                                 //                                                     .readdata
		.manager_instruction_master_readdatavalid                   (manager_instruction_master_readdatavalid),                            //                                                     .readdatavalid
		.worker0_wout_address                                       (worker0_wout_address),                                                //                                         worker0_wout.address
		.worker0_wout_waitrequest                                   (worker0_wout_waitrequest),                                            //                                                     .waitrequest
		.worker0_wout_burstcount                                    (worker0_wout_burstcount),                                             //                                                     .burstcount
		.worker0_wout_byteenable                                    (worker0_wout_byteenable),                                             //                                                     .byteenable
		.worker0_wout_read                                          (worker0_wout_read),                                                   //                                                     .read
		.worker0_wout_readdata                                      (worker0_wout_readdata),                                               //                                                     .readdata
		.worker0_wout_readdatavalid                                 (worker0_wout_readdatavalid),                                          //                                                     .readdatavalid
		.worker0_wout_write                                         (worker0_wout_write),                                                  //                                                     .write
		.worker0_wout_writedata                                     (worker0_wout_writedata),                                              //                                                     .writedata
		.worker0_wout_debugaccess                                   (worker0_wout_debugaccess),                                            //                                                     .debugaccess
		.worker1_wout_address                                       (worker1_wout_address),                                                //                                         worker1_wout.address
		.worker1_wout_waitrequest                                   (worker1_wout_waitrequest),                                            //                                                     .waitrequest
		.worker1_wout_burstcount                                    (worker1_wout_burstcount),                                             //                                                     .burstcount
		.worker1_wout_byteenable                                    (worker1_wout_byteenable),                                             //                                                     .byteenable
		.worker1_wout_read                                          (worker1_wout_read),                                                   //                                                     .read
		.worker1_wout_readdata                                      (worker1_wout_readdata),                                               //                                                     .readdata
		.worker1_wout_readdatavalid                                 (worker1_wout_readdatavalid),                                          //                                                     .readdatavalid
		.worker1_wout_write                                         (worker1_wout_write),                                                  //                                                     .write
		.worker1_wout_writedata                                     (worker1_wout_writedata),                                              //                                                     .writedata
		.worker1_wout_debugaccess                                   (worker1_wout_debugaccess),                                            //                                                     .debugaccess
		.worker2_wout_address                                       (worker2_wout_address),                                                //                                         worker2_wout.address
		.worker2_wout_waitrequest                                   (worker2_wout_waitrequest),                                            //                                                     .waitrequest
		.worker2_wout_burstcount                                    (worker2_wout_burstcount),                                             //                                                     .burstcount
		.worker2_wout_byteenable                                    (worker2_wout_byteenable),                                             //                                                     .byteenable
		.worker2_wout_read                                          (worker2_wout_read),                                                   //                                                     .read
		.worker2_wout_readdata                                      (worker2_wout_readdata),                                               //                                                     .readdata
		.worker2_wout_readdatavalid                                 (worker2_wout_readdatavalid),                                          //                                                     .readdatavalid
		.worker2_wout_write                                         (worker2_wout_write),                                                  //                                                     .write
		.worker2_wout_writedata                                     (worker2_wout_writedata),                                              //                                                     .writedata
		.worker2_wout_debugaccess                                   (worker2_wout_debugaccess),                                            //                                                     .debugaccess
		.worker3_wout_address                                       (worker3_wout_address),                                                //                                         worker3_wout.address
		.worker3_wout_waitrequest                                   (worker3_wout_waitrequest),                                            //                                                     .waitrequest
		.worker3_wout_burstcount                                    (worker3_wout_burstcount),                                             //                                                     .burstcount
		.worker3_wout_byteenable                                    (worker3_wout_byteenable),                                             //                                                     .byteenable
		.worker3_wout_read                                          (worker3_wout_read),                                                   //                                                     .read
		.worker3_wout_readdata                                      (worker3_wout_readdata),                                               //                                                     .readdata
		.worker3_wout_readdatavalid                                 (worker3_wout_readdatavalid),                                          //                                                     .readdatavalid
		.worker3_wout_write                                         (worker3_wout_write),                                                  //                                                     .write
		.worker3_wout_writedata                                     (worker3_wout_writedata),                                              //                                                     .writedata
		.worker3_wout_debugaccess                                   (worker3_wout_debugaccess),                                            //                                                     .debugaccess
		.altpll_0_pll_slave_address                                 (mm_interconnect_0_altpll_0_pll_slave_address),                        //                                   altpll_0_pll_slave.address
		.altpll_0_pll_slave_write                                   (mm_interconnect_0_altpll_0_pll_slave_write),                          //                                                     .write
		.altpll_0_pll_slave_read                                    (mm_interconnect_0_altpll_0_pll_slave_read),                           //                                                     .read
		.altpll_0_pll_slave_readdata                                (mm_interconnect_0_altpll_0_pll_slave_readdata),                       //                                                     .readdata
		.altpll_0_pll_slave_writedata                               (mm_interconnect_0_altpll_0_pll_slave_writedata),                      //                                                     .writedata
		.jtag_uart_0_avalon_jtag_slave_address                      (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_address),             //                        jtag_uart_0_avalon_jtag_slave.address
		.jtag_uart_0_avalon_jtag_slave_write                        (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_write),               //                                                     .write
		.jtag_uart_0_avalon_jtag_slave_read                         (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_read),                //                                                     .read
		.jtag_uart_0_avalon_jtag_slave_readdata                     (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_readdata),            //                                                     .readdata
		.jtag_uart_0_avalon_jtag_slave_writedata                    (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_writedata),           //                                                     .writedata
		.jtag_uart_0_avalon_jtag_slave_waitrequest                  (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_waitrequest),         //                                                     .waitrequest
		.jtag_uart_0_avalon_jtag_slave_chipselect                   (mm_interconnect_0_jtag_uart_0_avalon_jtag_slave_chipselect),          //                                                     .chipselect
		.manager_debug_mem_slave_address                            (mm_interconnect_0_manager_debug_mem_slave_address),                   //                              manager_debug_mem_slave.address
		.manager_debug_mem_slave_write                              (mm_interconnect_0_manager_debug_mem_slave_write),                     //                                                     .write
		.manager_debug_mem_slave_read                               (mm_interconnect_0_manager_debug_mem_slave_read),                      //                                                     .read
		.manager_debug_mem_slave_readdata                           (mm_interconnect_0_manager_debug_mem_slave_readdata),                  //                                                     .readdata
		.manager_debug_mem_slave_writedata                          (mm_interconnect_0_manager_debug_mem_slave_writedata),                 //                                                     .writedata
		.manager_debug_mem_slave_byteenable                         (mm_interconnect_0_manager_debug_mem_slave_byteenable),                //                                                     .byteenable
		.manager_debug_mem_slave_waitrequest                        (mm_interconnect_0_manager_debug_mem_slave_waitrequest),               //                                                     .waitrequest
		.manager_debug_mem_slave_debugaccess                        (mm_interconnect_0_manager_debug_mem_slave_debugaccess),               //                                                     .debugaccess
		.mbox_m_w0_avmm_msg_receiver_address                        (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_address),               //                          mbox_m_w0_avmm_msg_receiver.address
		.mbox_m_w0_avmm_msg_receiver_write                          (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_write),                 //                                                     .write
		.mbox_m_w0_avmm_msg_receiver_read                           (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_read),                  //                                                     .read
		.mbox_m_w0_avmm_msg_receiver_readdata                       (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_readdata),              //                                                     .readdata
		.mbox_m_w0_avmm_msg_receiver_writedata                      (mm_interconnect_0_mbox_m_w0_avmm_msg_receiver_writedata),             //                                                     .writedata
		.mbox_m_w0_avmm_msg_sender_address                          (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_address),                 //                            mbox_m_w0_avmm_msg_sender.address
		.mbox_m_w0_avmm_msg_sender_write                            (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_write),                   //                                                     .write
		.mbox_m_w0_avmm_msg_sender_read                             (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_read),                    //                                                     .read
		.mbox_m_w0_avmm_msg_sender_readdata                         (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_readdata),                //                                                     .readdata
		.mbox_m_w0_avmm_msg_sender_writedata                        (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_writedata),               //                                                     .writedata
		.mbox_m_w0_avmm_msg_sender_waitrequest                      (mm_interconnect_0_mbox_m_w0_avmm_msg_sender_waitrequest),             //                                                     .waitrequest
		.mbox_m_w1_avmm_msg_receiver_address                        (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_address),               //                          mbox_m_w1_avmm_msg_receiver.address
		.mbox_m_w1_avmm_msg_receiver_write                          (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_write),                 //                                                     .write
		.mbox_m_w1_avmm_msg_receiver_read                           (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_read),                  //                                                     .read
		.mbox_m_w1_avmm_msg_receiver_readdata                       (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_readdata),              //                                                     .readdata
		.mbox_m_w1_avmm_msg_receiver_writedata                      (mm_interconnect_0_mbox_m_w1_avmm_msg_receiver_writedata),             //                                                     .writedata
		.mbox_m_w1_avmm_msg_sender_address                          (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_address),                 //                            mbox_m_w1_avmm_msg_sender.address
		.mbox_m_w1_avmm_msg_sender_write                            (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_write),                   //                                                     .write
		.mbox_m_w1_avmm_msg_sender_read                             (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_read),                    //                                                     .read
		.mbox_m_w1_avmm_msg_sender_readdata                         (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_readdata),                //                                                     .readdata
		.mbox_m_w1_avmm_msg_sender_writedata                        (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_writedata),               //                                                     .writedata
		.mbox_m_w1_avmm_msg_sender_waitrequest                      (mm_interconnect_0_mbox_m_w1_avmm_msg_sender_waitrequest),             //                                                     .waitrequest
		.mbox_m_w2_avmm_msg_receiver_address                        (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_address),               //                          mbox_m_w2_avmm_msg_receiver.address
		.mbox_m_w2_avmm_msg_receiver_write                          (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_write),                 //                                                     .write
		.mbox_m_w2_avmm_msg_receiver_read                           (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_read),                  //                                                     .read
		.mbox_m_w2_avmm_msg_receiver_readdata                       (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_readdata),              //                                                     .readdata
		.mbox_m_w2_avmm_msg_receiver_writedata                      (mm_interconnect_0_mbox_m_w2_avmm_msg_receiver_writedata),             //                                                     .writedata
		.mbox_m_w2_avmm_msg_sender_address                          (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_address),                 //                            mbox_m_w2_avmm_msg_sender.address
		.mbox_m_w2_avmm_msg_sender_write                            (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_write),                   //                                                     .write
		.mbox_m_w2_avmm_msg_sender_read                             (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_read),                    //                                                     .read
		.mbox_m_w2_avmm_msg_sender_readdata                         (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_readdata),                //                                                     .readdata
		.mbox_m_w2_avmm_msg_sender_writedata                        (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_writedata),               //                                                     .writedata
		.mbox_m_w2_avmm_msg_sender_waitrequest                      (mm_interconnect_0_mbox_m_w2_avmm_msg_sender_waitrequest),             //                                                     .waitrequest
		.mbox_m_w3_avmm_msg_receiver_address                        (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_address),               //                          mbox_m_w3_avmm_msg_receiver.address
		.mbox_m_w3_avmm_msg_receiver_write                          (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_write),                 //                                                     .write
		.mbox_m_w3_avmm_msg_receiver_read                           (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_read),                  //                                                     .read
		.mbox_m_w3_avmm_msg_receiver_readdata                       (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_readdata),              //                                                     .readdata
		.mbox_m_w3_avmm_msg_receiver_writedata                      (mm_interconnect_0_mbox_m_w3_avmm_msg_receiver_writedata),             //                                                     .writedata
		.mbox_m_w3_avmm_msg_sender_address                          (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_address),                 //                            mbox_m_w3_avmm_msg_sender.address
		.mbox_m_w3_avmm_msg_sender_write                            (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_write),                   //                                                     .write
		.mbox_m_w3_avmm_msg_sender_read                             (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_read),                    //                                                     .read
		.mbox_m_w3_avmm_msg_sender_readdata                         (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_readdata),                //                                                     .readdata
		.mbox_m_w3_avmm_msg_sender_writedata                        (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_writedata),               //                                                     .writedata
		.mbox_m_w3_avmm_msg_sender_waitrequest                      (mm_interconnect_0_mbox_m_w3_avmm_msg_sender_waitrequest),             //                                                     .waitrequest
		.performance_counter_0_control_slave_address                (mm_interconnect_0_performance_counter_0_control_slave_address),       //                  performance_counter_0_control_slave.address
		.performance_counter_0_control_slave_write                  (mm_interconnect_0_performance_counter_0_control_slave_write),         //                                                     .write
		.performance_counter_0_control_slave_readdata               (mm_interconnect_0_performance_counter_0_control_slave_readdata),      //                                                     .readdata
		.performance_counter_0_control_slave_writedata              (mm_interconnect_0_performance_counter_0_control_slave_writedata),     //                                                     .writedata
		.performance_counter_0_control_slave_begintransfer          (mm_interconnect_0_performance_counter_0_control_slave_begintransfer), //                                                     .begintransfer
		.req_fifo_in_write                                          (mm_interconnect_0_req_fifo_in_write),                                 //                                          req_fifo_in.write
		.req_fifo_in_writedata                                      (mm_interconnect_0_req_fifo_in_writedata),                             //                                                     .writedata
		.req_fifo_in_waitrequest                                    (mm_interconnect_0_req_fifo_in_waitrequest),                           //                                                     .waitrequest
		.req_fifo_in_csr_address                                    (mm_interconnect_0_req_fifo_in_csr_address),                           //                                      req_fifo_in_csr.address
		.req_fifo_in_csr_write                                      (mm_interconnect_0_req_fifo_in_csr_write),                             //                                                     .write
		.req_fifo_in_csr_read                                       (mm_interconnect_0_req_fifo_in_csr_read),                              //                                                     .read
		.req_fifo_in_csr_readdata                                   (mm_interconnect_0_req_fifo_in_csr_readdata),                          //                                                     .readdata
		.req_fifo_in_csr_writedata                                  (mm_interconnect_0_req_fifo_in_csr_writedata),                         //                                                     .writedata
		.req_fifo_out_read                                          (mm_interconnect_0_req_fifo_out_read),                                 //                                         req_fifo_out.read
		.req_fifo_out_readdata                                      (mm_interconnect_0_req_fifo_out_readdata),                             //                                                     .readdata
		.req_fifo_out_waitrequest                                   (mm_interconnect_0_req_fifo_out_waitrequest),                          //                                                     .waitrequest
		.req_fifo_out_csr_address                                   (mm_interconnect_0_req_fifo_out_csr_address),                          //                                     req_fifo_out_csr.address
		.req_fifo_out_csr_write                                     (mm_interconnect_0_req_fifo_out_csr_write),                            //                                                     .write
		.req_fifo_out_csr_read                                      (mm_interconnect_0_req_fifo_out_csr_read),                             //                                                     .read
		.req_fifo_out_csr_readdata                                  (mm_interconnect_0_req_fifo_out_csr_readdata),                         //                                                     .readdata
		.req_fifo_out_csr_writedata                                 (mm_interconnect_0_req_fifo_out_csr_writedata),                        //                                                     .writedata
		.sdram_0_sdout_address                                      (mm_interconnect_0_sdram_0_sdout_address),                             //                                        sdram_0_sdout.address
		.sdram_0_sdout_write                                        (mm_interconnect_0_sdram_0_sdout_write),                               //                                                     .write
		.sdram_0_sdout_read                                         (mm_interconnect_0_sdram_0_sdout_read),                                //                                                     .read
		.sdram_0_sdout_readdata                                     (mm_interconnect_0_sdram_0_sdout_readdata),                            //                                                     .readdata
		.sdram_0_sdout_writedata                                    (mm_interconnect_0_sdram_0_sdout_writedata),                           //                                                     .writedata
		.sdram_0_sdout_burstcount                                   (mm_interconnect_0_sdram_0_sdout_burstcount),                          //                                                     .burstcount
		.sdram_0_sdout_byteenable                                   (mm_interconnect_0_sdram_0_sdout_byteenable),                          //                                                     .byteenable
		.sdram_0_sdout_readdatavalid                                (mm_interconnect_0_sdram_0_sdout_readdatavalid),                       //                                                     .readdatavalid
		.sdram_0_sdout_waitrequest                                  (mm_interconnect_0_sdram_0_sdout_waitrequest),                         //                                                     .waitrequest
		.sdram_0_sdout_debugaccess                                  (mm_interconnect_0_sdram_0_sdout_debugaccess),                         //                                                     .debugaccess
		.shared_ocm_s1_address                                      (mm_interconnect_0_shared_ocm_s1_address),                             //                                        shared_ocm_s1.address
		.shared_ocm_s1_write                                        (mm_interconnect_0_shared_ocm_s1_write),                               //                                                     .write
		.shared_ocm_s1_readdata                                     (mm_interconnect_0_shared_ocm_s1_readdata),                            //                                                     .readdata
		.shared_ocm_s1_writedata                                    (mm_interconnect_0_shared_ocm_s1_writedata),                           //                                                     .writedata
		.shared_ocm_s1_byteenable                                   (mm_interconnect_0_shared_ocm_s1_byteenable),                          //                                                     .byteenable
		.shared_ocm_s1_chipselect                                   (mm_interconnect_0_shared_ocm_s1_chipselect),                          //                                                     .chipselect
		.shared_ocm_s1_clken                                        (mm_interconnect_0_shared_ocm_s1_clken),                               //                                                     .clken
		.shared_ocm_s2_address                                      (mm_interconnect_0_shared_ocm_s2_address),                             //                                        shared_ocm_s2.address
		.shared_ocm_s2_write                                        (mm_interconnect_0_shared_ocm_s2_write),                               //                                                     .write
		.shared_ocm_s2_readdata                                     (mm_interconnect_0_shared_ocm_s2_readdata),                            //                                                     .readdata
		.shared_ocm_s2_writedata                                    (mm_interconnect_0_shared_ocm_s2_writedata),                           //                                                     .writedata
		.shared_ocm_s2_byteenable                                   (mm_interconnect_0_shared_ocm_s2_byteenable),                          //                                                     .byteenable
		.shared_ocm_s2_chipselect                                   (mm_interconnect_0_shared_ocm_s2_chipselect),                          //                                                     .chipselect
		.shared_ocm_s2_clken                                        (mm_interconnect_0_shared_ocm_s2_clken)                                //                                                     .clken
	);

	system_irq_mapper irq_mapper (
		.clk           (altpll_0_c0_clk),                    //       clk.clk
		.reset         (rst_controller_002_reset_out_reset), // clk_reset.reset
		.receiver0_irq (irq_mapper_receiver0_irq),           // receiver0.irq
		.sender_irq    (manager_irq_irq)                     //    sender.irq
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                 // reset_in0.reset
		.clk            (clk_clk),                        //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (manager_debug_reset_request_reset),  // reset_in1.reset
		.clk            (altpll_0_c0_clk),                    //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (1),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_002 (
		.reset_in0      (~reset_reset_n),                         // reset_in0.reset
		.clk            (altpll_0_c0_clk),                        //       clk.clk
		.reset_out      (rst_controller_002_reset_out_reset),     // reset_out.reset
		.reset_req      (rst_controller_002_reset_out_reset_req), //          .reset_req
		.reset_req_in0  (1'b0),                                   // (terminated)
		.reset_in1      (1'b0),                                   // (terminated)
		.reset_req_in1  (1'b0),                                   // (terminated)
		.reset_in2      (1'b0),                                   // (terminated)
		.reset_req_in2  (1'b0),                                   // (terminated)
		.reset_in3      (1'b0),                                   // (terminated)
		.reset_req_in3  (1'b0),                                   // (terminated)
		.reset_in4      (1'b0),                                   // (terminated)
		.reset_req_in4  (1'b0),                                   // (terminated)
		.reset_in5      (1'b0),                                   // (terminated)
		.reset_req_in5  (1'b0),                                   // (terminated)
		.reset_in6      (1'b0),                                   // (terminated)
		.reset_req_in6  (1'b0),                                   // (terminated)
		.reset_in7      (1'b0),                                   // (terminated)
		.reset_req_in7  (1'b0),                                   // (terminated)
		.reset_in8      (1'b0),                                   // (terminated)
		.reset_req_in8  (1'b0),                                   // (terminated)
		.reset_in9      (1'b0),                                   // (terminated)
		.reset_req_in9  (1'b0),                                   // (terminated)
		.reset_in10     (1'b0),                                   // (terminated)
		.reset_req_in10 (1'b0),                                   // (terminated)
		.reset_in11     (1'b0),                                   // (terminated)
		.reset_req_in11 (1'b0),                                   // (terminated)
		.reset_in12     (1'b0),                                   // (terminated)
		.reset_req_in12 (1'b0),                                   // (terminated)
		.reset_in13     (1'b0),                                   // (terminated)
		.reset_req_in13 (1'b0),                                   // (terminated)
		.reset_in14     (1'b0),                                   // (terminated)
		.reset_req_in14 (1'b0),                                   // (terminated)
		.reset_in15     (1'b0),                                   // (terminated)
		.reset_req_in15 (1'b0)                                    // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_003 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (manager_debug_reset_request_reset),  // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_003_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_004 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (manager_debug_reset_request_reset),  // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_004_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_005 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (manager_debug_reset_request_reset),  // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_005_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (2),
		.OUTPUT_RESET_SYNC_EDGES   ("none"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_006 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.reset_in1      (manager_debug_reset_request_reset),  // reset_in1.reset
		.clk            (),                                   //       clk.clk
		.reset_out      (rst_controller_006_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

endmodule
